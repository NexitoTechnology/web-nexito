---
// src/components/PopupNewsletter.astro
---

<div
  id="popup-overlay"
  class="invisible opacity-0 transition-all duration-300 fixed inset-0 z-40 flex items-center justify-center"
>
  <div class="absolute inset-0 bg-slate-800/85 backdrop-blur-md"></div>

  <div
    id="popup-content"
    style="border: 12px solid rgba(255, 255, 255, 0.733);"
    class="relative bg-gradient-to-br from-blue-900 via-blue-800 to-blue-900 w-full max-w-[500px] rounded-xl shadow-[0_8px_32px_rgba(0,0,0,0.5)] transform transition-all p-4 sm:p-8 mx-4 my-auto"
  >
    <!-- Close button -->
    <button
      id="close-popup"
      class="absolute right-3 top-3 bg-white hover:bg-gray-500 rounded-full p-1.5 transition-all shadow-lg"
      onclick="window.dataLayer.push({
        'event': 'popup_close_button',
        'eventCategory': 'engagement',
        'eventAction': 'click',
        'eventLabel': 'free_call_30min'
      })" 
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-5 text-sky-800"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Form Content -->
    <div id="form-content">
      <!-- Badge -->
      <div class="inline-flex items-center mb-3">
        <span
          class="text-xs sm:text-sm font-medium bg-blue-600/30 text-blue-200 px-2 sm:px-3 py-1 rounded-full border border-blue-500/30"
        >
          üìö eBook Gratuito
        </span>
      </div>

      <h2 class="text-xl sm:text-3xl font-bold text-white mb-1 sm:mb-2">
        Negocios en Autom√°tico:
        <span class="text-blue-200 block">Crece M√°s, Trabaja Menos</span>
      </h2>

      <p class="text-blue-200 mb-3 sm:mb-6 text-xs sm:text-base">
        Descubre c√≥mo hacer crecer tu negocio mientras reduces tus horas de trabajo con automatizaci√≥n inteligente
      </p>

      <div class="space-y-1 sm:space-y-3 mb-3 sm:mb-8">
        <div class="flex items-center gap-1 sm:gap-2 text-blue-200 text-xs sm:text-base">
          <svg
            class="w-4 h-4 sm:w-5 sm:h-5 text-blue-400 shrink-0"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M5 13l4 4L19 7"></path>
          </svg>
          Estrategias probadas de automatizaci√≥n empresarial
        </div>
        <div class="flex items-center gap-1 sm:gap-2 text-blue-200 text-xs sm:text-base">
          <svg
            class="w-4 h-4 sm:w-5 sm:h-5 text-blue-400 shrink-0"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M5 13l4 4L19 7"></path>
          </svg>
          Herramientas y sistemas paso a paso
        </div>
        <div class="flex items-center gap-1 sm:gap-2 text-blue-200 text-xs sm:text-base">
          <svg
            class="w-4 h-4 sm:w-5 sm:h-5 text-blue-400 shrink-0"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M5 13l4 4L19 7"></path>
          </svg>
          Casos de √©xito y ejemplos pr√°cticos
        </div>
      </div>

      <form id="newsletter-form" class="space-y-2 sm:space-y-4">
        <div class="relative">
          <input
            type="text"
            id="name"
            name="name"
            required
            minlength="2"
            class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-white rounded-lg text-gray-900 placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 peer text-xs sm:text-base"
            placeholder="Tu nombre"
          />
          <span
            class="absolute right-3 top-2 sm:top-3 text-red-500 opacity-0 transition-opacity peer-invalid:opacity-100 text-xs"
          ></span>
        </div>

        <div class="relative">
          <input
            type="email"
            id="email"
            name="email"
            required
            pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
            class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-white rounded-lg text-gray-900 placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 peer text-xs sm:text-base"
            placeholder="tu@email.com"
          />
          <span
            class="absolute right-3 top-2 sm:top-3 text-red-500 opacity-0 transition-opacity peer-invalid:opacity-100 text-xs"
          ></span>
        </div>

        <div class="relative">
          <input
            type="tel"
            id="phone"
            name="phone"
            pattern="[0-9]{9}"
            class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-white rounded-lg text-gray-900 placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 peer text-xs sm:text-base"
            placeholder="Tel√©fono (opcional)"
          />
          <span
            class="absolute right-3 top-2 sm:top-3 text-red-500 opacity-0 transition-opacity peer-invalid:opacity-100 text-xs"
          ></span>
        </div>

        <button
          type="submit"
          id="submit-button"
          onclick="window.dataLayer.push({
            'event': 'popup_download_button',
            'eventCategory': 'engagement',
            'eventAction': 'click',
            'eventLabel': 'free_call_30min'
          })"
          class="w-full bg-white text-blue-900 font-bold py-2 sm:py-3 px-3 sm:px-4 rounded-lg hover:bg-gray-50 transition-colors flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed text-xs sm:text-base"
        >
          <span>Descargar eBook Gratis</span>
          <svg
            class="w-4 h-4 sm:w-5 sm:h-5"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
          <!-- Loading spinner (hidden by default) -->
          <svg
            class="hidden animate-spin h-4 w-4 sm:h-5 sm:w-5 text-blue-900"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <circle
              class="opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              stroke-width="4"></circle>
            <path
              class="opacity-75"
              fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
            ></path>
          </svg>
        </button>

        <div class="text-center">
          <p class="text-xs text-blue-200">
            üîí Tu informaci√≥n est√° segura con nosotros
          </p>
          <p class="text-[10px] sm:text-xs text-blue-200/80 mt-1">
            Al enviar este formulario, aceptas recibir comunicaciones comerciales y confirmas que has le√≠do y aceptas nuestra <a href="/politica-de-privacidad" class="underline hover:text-white">Pol√≠tica de Privacidad</a> y <a href="/termiinos-y-condiciones" class="underline hover:text-white">T√©rminos y Condiciones</a>.
          </p>
        </div>
      </form>
    </div>

    <!-- Success Message -->
    <div id="success-message" class="hidden text-center">
      <svg
        class="w-10 h-10 sm:w-16 sm:h-16 text-green-400 mx-auto mb-2 sm:mb-4"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <h3 class="text-lg sm:text-2xl font-bold text-white mb-2 sm:mb-4">
        ¬°Gracias por suscribirte!
      </h3>
      <div class="text-blue-200 space-y-1 sm:space-y-4 mb-3 sm:mb-6 text-xs sm:text-base">
        <p>Te hemos enviado un email con el enlace de descarga del eBook.</p>
        <p class="text-[10px] sm:text-sm">
          üëâ Si no lo encuentras en tu bandeja de entrada, revisa tu carpeta de
          spam o promociones.
        </p>
        <p class="text-[10px] sm:text-sm">
          Para asegurarte de recibir nuestros pr√≥ximos emails, a√±ade
          <span class="text-white font-medium">info@nexito.tech</span>
          a tus contactos.
        </p>
      </div>
      <button
        id="close-success"
        class="bg-white text-blue-900 font-bold py-2 sm:py-3 px-4 sm:px-6 rounded-lg hover:bg-gray-50 transition-colors text-xs sm:text-base"
      >
        Cerrar
      </button>
    </div>

    <!-- Error Message -->
    <div id="error-message" class="hidden text-center animate-fade-in">
      <svg
        class="w-10 h-10 sm:w-16 sm:h-16 text-red-400 mx-auto mb-2 sm:mb-4"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <h3 class="text-lg sm:text-2xl font-bold text-white mb-2 sm:mb-4">Algo sali√≥ mal</h3>
      <p id="error-text" class="text-blue-200 mb-3 sm:mb-6 text-xs sm:text-base">
        Hubo un error al procesar tu suscripci√≥n. Por favor, intenta de nuevo.
      </p>
      <button
        id="close-error"
        class="bg-white text-blue-900 font-bold py-2 sm:py-3 px-4 sm:px-6 rounded-lg hover:bg-gray-50 transition-colors text-xs sm:text-base"
      >
        Intentar de nuevo
      </button>
    </div>
  </div>
</div>

<style>
  /* Estilos adaptados para m√≥vil */
  #popup-overlay {
    overflow-y: auto; /* Movemos el scroll al overlay para que el popup se adapte */
  }
  
  #popup-content {
    transform: scale(1); /* Aseguramos que no haya transformaci√≥n inicial */
    transition: transform 0.3s, opacity 0.3s;
  }
  
  /* Ajustes espec√≠ficos para m√≥viles */
  @media (max-width: 768px) {
    /* Posicionamiento teniendo en cuenta barras de navegaci√≥n */
    #popup-overlay {
      align-items: center; /* Centramos verticalmente */
      padding-top: 0;
      padding-bottom: 0;
    }
    
    #popup-content {
      border-width: 8px !important; /* Borde m√°s delgado en m√≥vil */
      margin: auto !important; /* Centramos correctamente */
      max-height: none !important; /* Eliminamos altura m√°xima para que se adapte */
    }
    
    /* Asegurar que el popup est√° centrado y visible entre las barras */
    .visible #popup-content {
      position: relative;
      margin: 70px auto 80px !important; /* Margen para las barras de navegaci√≥n */
    }
  }
  
  /* Animaci√≥n espec√≠fica para dispositivos m√≥viles peque√±os */
  @media (max-height: 700px) and (max-width: 768px) {
    #popup-content {
      padding: 1rem !important;
    }
    
    #popup-content .space-y-1 > div {
      margin-top: 0.25rem;
    }
    
    #form-content {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  /* Animaci√≥n para el error message */
  .animate-fade-in {
    animation: fadeIn 0.3s ease-in;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>

<script>
  // Funci√≥n para ajustar el contenido del popup a la pantalla
  function adjustPopupHeight() {
    const popupContent = document.getElementById('popup-content');
    const popupOverlay = document.getElementById('popup-overlay');
    
    if (!popupContent || !popupOverlay) return;
    
    // En m√≥viles, calculamos el espacio disponible real
    if (window.innerWidth <= 768) {
      const viewportHeight = window.innerHeight;
      
      // Estimamos altura de las barras de navegaci√≥n
      const topNavHeight = 60; // Estimaci√≥n de altura de barra superior
      const bottomNavHeight = 70; // Estimaci√≥n de altura de barra inferior
      
      // Calculamos el espacio disponible
      const availableHeight = viewportHeight - topNavHeight - bottomNavHeight - 20;
      
      // Si el contenido es mayor que el espacio disponible, aplicamos un escalado
      const contentHeight = popupContent.offsetHeight;
      
      if (contentHeight > availableHeight) {
        // Aplicamos un escalado para que quepa en la pantalla
        const scale = Math.min(0.95, availableHeight / contentHeight);
        
        popupContent.style.transform = `scale(${scale})`;
        popupContent.style.transformOrigin = 'center center';
      } else {
        popupContent.style.transform = 'none';
      }
    } else {
      // En desktop restablecemos
      popupContent.style.transform = 'none';
    }
  }

  // Detectar altura del men√∫ superior para ajustar el popup
  document.addEventListener('DOMContentLoaded', function() {
    const header = document.querySelector('header');
    const popupOverlay = document.getElementById('popup-overlay');
    
    // Ajustamos la altura inicialmente
    adjustPopupHeight();
    
    // Y lo hacemos cada vez que cambie el tama√±o de la ventana
    window.addEventListener('resize', adjustPopupHeight);
  });

  // El resto del script se mantiene igual
  let isSubmitting = false;
  let submitAttempts = 0;
  const MAX_ATTEMPTS = 3;
  const COOLDOWN_TIME = 60000; // 1 minuto en milisegundos

  // Validaci√≥n de inputs
  function validatePhone(phone: string): boolean {
    if (!phone) return true; // Es opcional
    const phoneRegex = /^[0-9]{9}$/;
    return phoneRegex.test(phone);
  }

  function validateEmail(email: string): boolean {
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    return emailRegex.test(email);
  }

  function sanitizeInput(input: string): string {
    return input.trim().replace(/[<>]/g, "");
  }

  // UI Helpers
  function showLoading(button: HTMLButtonElement) {
    const textSpan = button.querySelector("span");
    const arrow = button.querySelector("svg:not(.animate-spin)");
    const spinner = button.querySelector(".animate-spin");

    if (textSpan) textSpan.textContent = "Enviando...";
    if (arrow) arrow.classList.add("hidden");
    if (spinner) spinner.classList.remove("hidden");
    button.disabled = true;
  }

  function hideLoading(button: HTMLButtonElement) {
    const textSpan = button.querySelector("span");
    const arrow = button.querySelector("svg:not(.animate-spin)");
    const spinner = button.querySelector(".animate-spin");

    if (textSpan) textSpan.textContent = "Descargar eBook Gratis";
    if (arrow) arrow.classList.remove("hidden");
    if (spinner) spinner.classList.add("hidden");
    button.disabled = false;
  }

  function showSuccess() {
    const formContent = document.getElementById("form-content");
    const successMessage = document.getElementById("success-message");
    if (formContent && successMessage) {
      formContent.classList.add("hidden");
      successMessage.classList.remove("hidden");
      
      // Volvemos a ajustar el tama√±o despu√©s de cambiar el contenido
      setTimeout(adjustPopupHeight, 10);
    }
  }

  function showError(message: string) {
    const formContent = document.getElementById("form-content");
    const errorMessage = document.getElementById("error-message");
    const errorText = document.getElementById("error-text");
    if (formContent && errorMessage && errorText) {
      formContent.classList.add("hidden");
      errorMessage.classList.remove("hidden");
      errorText.textContent = message;
      
      // Volvemos a ajustar el tama√±o despu√©s de cambiar el contenido
      setTimeout(adjustPopupHeight, 10);
    }
  }

  // Popup visibility
  setTimeout(() => {
    const popup = document.getElementById("popup-overlay");
    if (popup) {
      popup.classList.remove("invisible", "opacity-0");
      popup.classList.add("visible", "opacity-100");
      
      // Ajustamos el tama√±o al mostrarlo
      setTimeout(adjustPopupHeight, 100);
    }
  }, 5000);

  // Close handlers
  function closePopup() {
    const popup = document.getElementById("popup-overlay");
    if (popup) {
      popup.classList.remove("visible", "opacity-100");
      popup.classList.add("invisible", "opacity-0");
    }
  }

  document.getElementById("close-popup")?.addEventListener("click", closePopup);
  document
    .getElementById("close-success")
    ?.addEventListener("click", closePopup);
  document.getElementById("close-error")?.addEventListener("click", () => {
    const formContent = document.getElementById("form-content");
    const errorMessage = document.getElementById("error-message");
    if (formContent && errorMessage) {
      errorMessage.classList.add("hidden");
      formContent.classList.remove("hidden");
      
      // Volvemos a ajustar el tama√±o
      setTimeout(adjustPopupHeight, 10);
    }
  });

  document.getElementById("popup-overlay")?.addEventListener("click", (e) => {
    if (e.target instanceof HTMLElement && e.target.id === "popup-overlay") {
      closePopup();
    }
  });

  // Form submission
  const form = document.getElementById("newsletter-form");
  const submitButton = document.getElementById(
    "submit-button"
  ) as HTMLButtonElement;

  if (form && submitButton) {
    // Input validation listeners
    const phoneInput = document.getElementById("phone") as HTMLInputElement;
    phoneInput?.addEventListener("input", (e) => {
      const input = e.target as HTMLInputElement;
      input.value = input.value.replace(/[^0-9]/g, "").slice(0, 9);
    });

    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      if (isSubmitting) return;

      // Anti-spam check
      if (submitAttempts >= MAX_ATTEMPTS) {
        showError(
          "Has realizado demasiados intentos. Por favor, espera un momento."
        );
        setTimeout(() => {
          submitAttempts = 0;
        }, COOLDOWN_TIME);
        return;
      }

      submitAttempts++;
      isSubmitting = true;
      showLoading(submitButton);

      const nameInput = document.getElementById("name") as HTMLInputElement;
      const emailInput = document.getElementById("email") as HTMLInputElement;
      const phoneInput = document.getElementById("phone") as HTMLInputElement;

      const name = sanitizeInput(nameInput?.value || "");
      const email = sanitizeInput(emailInput?.value || "");
      const phone = sanitizeInput(phoneInput?.value || "");

      // Validaci√≥n adicional
      if (!validateEmail(email)) {
        showError("Por favor, introduce un email v√°lido");
        hideLoading(submitButton);
        isSubmitting = false;
        return;
      }

      if (phone && !validatePhone(phone)) {
        showError("Por favor, introduce un tel√©fono v√°lido (9 d√≠gitos)");
        hideLoading(submitButton);
        isSubmitting = false;
        return;
      }

      try {
        const response = await fetch("/api/subscribe-email-bravo", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name,
            email,
            attributes: {
              NOMBRE: name,
              SMS: phone
                ? phone.startsWith("+34")
                  ? phone
                  : `+34${phone}`
                : undefined,
            },
          }),
        });

        const data = await response.json();

        if (response.ok) {
          // Simplificamos el manejo de la respuesta
          showSuccess();
        } else {
          let errorMessage =
            data.error || "Hubo un error al procesar tu suscripci√≥n.";
          showError(errorMessage);
        }
      } catch (error) {
        console.error("Error:", error);
        showError("Error de conexi√≥n. Por favor, intenta de nuevo.");
      } finally {
        isSubmitting = false;
        hideLoading(submitButton);
      }
    });
  }

  // Validaci√≥n en tiempo real de los campos
  const inputs = form?.querySelectorAll("input");
  inputs?.forEach((input) => {
    input.addEventListener("invalid", (e) => {
      e.preventDefault();
      const inputElement = e.target as HTMLInputElement;
      const errorSpan = inputElement.nextElementSibling as HTMLSpanElement;

      switch (inputElement.id) {
        case "name":
          errorSpan.textContent = "‚ö†Ô∏è";
          inputElement.title = "Nombre muy corto";
          break;
        case "email":
          errorSpan.textContent = "‚ö†Ô∏è";
          inputElement.title = "Email no v√°lido";
          break;
        case "phone":
          if (inputElement.value) {
            // Solo si se ha introducido algo
            errorSpan.textContent = "‚ö†Ô∏è";
            inputElement.title = "9 d√≠gitos requeridos";
          }
          break;
      }
    });

    // Limpiar mensajes de error cuando el input es v√°lido
    input.addEventListener("input", () => {
      const errorSpan = input.nextElementSibling as HTMLSpanElement;
      errorSpan.textContent = "";
      input.title = "";
    });
  });
</script>