---
// src/components/JsonLD.astro - Optimizado para SEO
interface Props {
  type: 'Organization' | 'WebSite' | 'WebPage' | 'Article' | 'Service' | 
        'AboutPage' | 'ContactPage' | 'FAQPage' | 'Product' | 'BreadcrumbList' |
        'CollectionPage' | 'Person' | 'ImageObject' | 'Event';
  data: Record<string, any>;
}
const props = Astro.props;

// Validación básica para evitar errores
const validateSchema = (type: Props['type'], data: Props['data']) => {
  // Asegurar que hay al menos un @type válido
  if (!data['@type']) {
    data['@type'] = type;
  }
  
  // Asegurar que existe el contexto
  if (!data['@context']) {
    data['@context'] = 'https://schema.org';
  }
  
  // Validaciones específicas por tipo
  switch(type) {
    case 'Product':
      // Validar valoraciones y reseñas
      if (data.aggregateRating) {
        data.aggregateRating.ratingCount = Math.max(1, data.aggregateRating.ratingCount || 0);
        data.aggregateRating.reviewCount = Math.max(1, data.aggregateRating.reviewCount || 0);
      }
      break;
      
    case 'Article':
      // Asegurar fechas en formato ISO
      if (data.datePublished && !(data.datePublished instanceof String) && data.datePublished.toISOString) {
        data.datePublished = data.datePublished.toISOString();
      }
      if (data.dateModified && !(data.dateModified instanceof String) && data.dateModified.toISOString) {
        data.dateModified = data.dateModified.toISOString();
      }
      break;
      
    case 'FAQPage':
      // Asegurar estructura correcta
      if (data.mainEntity && !Array.isArray(data.mainEntity)) {
        data.mainEntity = [data.mainEntity];
      }
      break;
      
    case 'BreadcrumbList':
      // Asegurar itemListElement
      if (data.itemListElement && !Array.isArray(data.itemListElement)) {
        data.itemListElement = [data.itemListElement];
      }
      break;
  }
  
  return data;
};

// Schema base para la organización
const organizationSchema = {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": "Nexito Technology",
  "url": "https://nexito.tech",
  "logo": {
    "@type": "ImageObject",
    "url": "https://nexito.tech/Logo.svg",
    "width": "180",
    "height": "60"
  },
  "image": {
    "@type": "ImageObject",
    "url": "https://nexito.tech/icon-512x512.png",
    "width": "512",
    "height": "512"
  },
  "description": "Transformamos empresas a través de la automatización inteligente y soluciones de IA personalizadas.",
  "address": {
    "@type": "PostalAddress",
    "streetAddress": "Calle Lira 8, N36",
    "postalCode": "04648",
    "addressLocality": "Almería",
    "addressRegion": "Almería",
    "addressCountry": {
      "@type": "Country",
      "name": "ES"
    }
  },
  "contactPoint": [{
    "@type": "ContactPoint",
    "contactType": "customer service",
    "telephone": "+34950794543",
    "email": "info@nexito.tech",
    "areaServed": {
      "@type": "Country",
      "name": "ES"
    },
    "availableLanguage": ["Spanish", "English"]
  }],
  "sameAs": []
};

// Schema base para el sitio web
const websiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "Nexito Technology",
  "url": "https://nexito.tech",
  "description": "Transformamos empresas mediante automatización de procesos e Inteligencia Artificial",
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://nexito.tech/search?q={search_term_string}",
    "query-input": "required name=search_term_string"
  }
};

// Schema base para página web
const webPageSchema = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": "",
  "description": "",
  "url": "",
  "isPartOf": {
    "@type": "WebSite",
    "name": "Nexito Technology",
    "url": "https://nexito.tech"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Nexito Technology",
    "logo": {
      "@type": "ImageObject",
      "url": "https://nexito.tech/Logo.svg",
      "width": "180",
      "height": "60"
    }
  }
};

// Schema base para página Acerca de
const aboutPageSchema = {
  "@context": "https://schema.org",
  "@type": "AboutPage",
  "name": "Acerca de Nexito Technology",
  "description": "",
  "url": "https://nexito.tech/nosotros/",
  "isPartOf": {
    "@type": "WebSite",
    "name": "Nexito Technology",
    "url": "https://nexito.tech"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Nexito Technology",
    "logo": {
      "@type": "ImageObject",
      "url": "https://nexito.tech/Logo.svg"
    }
  }
};

// Schema base para artículos
const articleSchema = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": "",
  "description": "",
  "image": [],
  "datePublished": "",
  "dateModified": "",
  "author": {
    "@type": "Person",
    "name": "",
    "url": ""
  },
  "publisher": {
    "@type": "Organization",
    "name": "Nexito Technology",
    "logo": {
      "@type": "ImageObject",
      "url": "https://nexito.tech/Logo.svg",
      "width": "180",
      "height": "60"
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": ""
  },
  "keywords": []
};

// Schema base para servicios
const serviceSchema = {
  "@context": "https://schema.org",
  "@type": "Service",
  "serviceType": "",
  "name": "",
  "description": "",
  "provider": {
    "@type": "Organization",
    "name": "Nexito Technology",
    "url": "https://nexito.tech"
  },
  "areaServed": {
    "@type": "Country",
    "name": "ES"
  },
  "offers": {
    "@type": "Offer",
    "availability": "https://schema.org/InStock",
    "price": "",
    "priceCurrency": "EUR"
  }
};

// Schema base para página de contacto
const contactPageSchema = {
  "@context": "https://schema.org",
  "@type": "ContactPage",
  "name": "Contacto Nexito Technology",
  "description": "Contacta con nuestro equipo",
  "url": "https://nexito.tech/contacto/",
  "mainEntity": {
    "@type": "Organization",
    "name": "Nexito Technology",
    "contactPoint": {
      "@type": "ContactPoint",
      "contactType": "customer service",
      "email": "info@nexito.tech",
      "telephone": "+34950794543"
    }
  }
};

// Schema base para FAQs
const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": [], // Se llenará con los datos que pasemos
  "url": "https://nexito.tech",
  "name": "Preguntas Frecuentes - Nexito Technology",
  "description": "Encuentra respuestas a las preguntas más frecuentes sobre nuestros servicios de automatización e IA"
};

// Schema base para producto con reseñas
const productSchema = {
  "@context": "https://schema.org",
  "@type": "Product",
  "name": "Nexito Technology Services",
  "description": "Servicios de automatización e inteligencia artificial para empresas",
  "brand": {
    "@type": "Brand",
    "name": "Nexito Technology"
  },
  "review": [],
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": "5",
    "bestRating": "5",
    "worstRating": "1",
    "ratingCount": 1, // Valor mínimo por defecto
    "reviewCount": 1  // Valor mínimo por defecto
  }
};

// Schema base para BreadcrumbList
const breadcrumbListSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": []
};

// Schema base para CollectionPage (listados)
const collectionPageSchema = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": "",
  "description": "",
  "url": "",
  "isPartOf": {
    "@type": "WebSite",
    "name": "Nexito Technology",
    "url": "https://nexito.tech"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Nexito Technology"
  },
  "hasPart": []
};

// Función para obtener el schema según el tipo
const getSchema = (type: Props['type'], data: Props['data']) => {
  let baseSchema;
  
  switch(type) {
    case 'Organization':
      baseSchema = { ...organizationSchema };
      break;
    case 'WebSite':
      baseSchema = { ...websiteSchema };
      break;
    case 'WebPage':
      baseSchema = { ...webPageSchema };
      break;
    case 'AboutPage':
      baseSchema = { ...aboutPageSchema };
      break;
    case 'Article':
      baseSchema = { ...articleSchema };
      break;
    case 'Service':
      baseSchema = { ...serviceSchema };
      break;
    case 'ContactPage':
      baseSchema = { ...contactPageSchema };
      break;
    case 'FAQPage':
      baseSchema = { ...faqSchema };
      break;
    case 'Product':
      baseSchema = { ...productSchema };
      break;
    case 'BreadcrumbList':
      baseSchema = { ...breadcrumbListSchema };
      break;
    case 'CollectionPage':
      baseSchema = { ...collectionPageSchema };
      break;
    default:
      baseSchema = { "@context": "https://schema.org" };
      break;
  }
  
  // Combina el esquema base con los datos proporcionados
  const mergedSchema = { ...baseSchema, ...data };
  
  // Validar el schema antes de devolverlo
  return validateSchema(type, mergedSchema);
};

const schema = getSchema(props.type, props.data);
---

<script type="application/ld+json" set:html={JSON.stringify(schema, null, 0)} />