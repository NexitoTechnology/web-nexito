---
interface ProcessStep {
  step: number;
  title: string;
  description: string;
}

interface Props {
  title: string;
  subtitle: string;
  description: string;
  tag: string;
  steps: ProcessStep[];
}

const { title, subtitle, description, tag, steps } = Astro.props;
---

<section class="py-12 md:py-16 bg-gradient-to-b from-gray-50 to-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6">
    <div class="text-center mb-16">
      <span class="inline-block px-4 py-1.5 bg-blue-100 text-blue-700 rounded-full text-sm font-medium mb-4">
        {tag}
      </span>
      <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        {title} <span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-blue-800">{subtitle}</span>
      </h2>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        {description}
      </p>
    </div>

    <div class="relative">
      <div class="absolute top-1/2 left-0 w-full h-1 bg-gradient-to-r from-blue-200 via-blue-400 to-blue-200 -translate-y-1/2 hidden md:block"></div>

      <div class="grid grid-cols-1 md:grid-cols-5 gap-8">
        {steps.map((step) => (
          <div class="relative group">
            <div class="bg-white rounded-full w-16 h-16 flex items-center justify-center text-blue-600 font-bold text-xl border-4 border-blue-200 mx-auto z-10 relative shadow-lg group-hover:scale-110 group-hover:border-blue-400 transition-all duration-300">
              {step.step}
            </div>
            <div class="text-center mt-6 bg-white rounded-xl p-6 shadow-lg group-hover:shadow-xl transition-shadow">
              <h3 class="font-bold text-lg text-gray-900 mb-3">
                {step.title}
              </h3>
              <p class="text-gray-600">{step.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>