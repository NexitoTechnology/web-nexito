---
interface Feature {
  title: string;
  description: string;
  icon: string;
}

interface Props {
  title: string;
  subtitle: string;
  description: string;
  tag: string;
  features: Feature[];
}

const { title, subtitle, description, tag, features } = Astro.props;
---

<section class="py-12 md:py-16 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden">
  <div class="absolute inset-0 bg-grid-white/[0.05] bg-[size:20px_20px]"></div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 relative">
    <div class="text-center mb-16">
      <span class="inline-block px-4 py-1.5 bg-blue-100 text-blue-700 rounded-full text-sm font-medium mb-4">
        {tag}
      </span>
      <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        {title} <span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-blue-800">{subtitle}</span>
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        {description}
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
      {features.map((feature) => (
        <div class="group bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 hover:border-blue-200">
          <div class="mb-6 transform group-hover:scale-110 transition-transform duration-300">
            <span class="text-5xl">{feature.icon}</span>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-4">
            {feature.title}
          </h3>
          <p class="text-gray-600 group-hover:text-gray-700 transition-colors">
            {feature.description}
          </p>
        </div>
      ))}
    </div>
  </div>
</section>