---
// src/components/ContactForm.astro
import Schema from "./JsonLD.astro";
---

<Schema type="ContactPage" data={{}} />

<div class="w-full max-w-[90%] md:max-w-2xl mx-auto my-12 md:my-20">
  <div class="relative bg-white rounded-2xl shadow-xl overflow-hidden">
    <!-- Decoración de fondo -->
    <div
      class="absolute inset-0 bg-gradient-to-br from-blue-50 to-purple-50 opacity-50"
    >
    </div>

    <div class="relative p-6 md:p-8">
      <div class="text-center mb-8">
        <h2
          class="text-3xl md:text-4xl font-bold bg-gradient-to-r from-blue-600 bg-blue-800 bg-clip-text text-transparent"
        >
          Contáctame
        </h2>
        <p class="mt-3 text-gray-600 text-sm md:text-base">
          Estaré encantado de responder a tus preguntas
        </p>
      </div>

      <!-- Form -->
      <form
        id="contact-form"
        class="space-y-6"
        action="https://usebasin.com/f/4b25a9769478"
        method="POST"
      >
        <!-- Nombre -->
        <div class="space-y-1.5">
          <label for="name" class="block text-sm font-medium text-gray-700">
            Nombre completo
          </label>
          <div class="relative group">
            <div
              class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none"
            >
              <svg
                class="h-5 w-5 text-gray-400 transition group-hover:text-blue-500"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <input
              type="text"
              name="name"
              id="name"
              class="form-input"
              placeholder="Tu nombre"
              required
            />
          </div>
        </div>

        <!-- Email -->
        <div class="space-y-1.5">
          <label for="email" class="block text-sm font-medium text-gray-700">
            Email
          </label>
          <div class="relative group">
            <div
              class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none"
            >
              <svg
                class="h-5 w-5 text-gray-400 transition group-hover:text-blue-500"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"
                ></path>
                <path
                  d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"
                ></path>
              </svg>
            </div>
            <input
              type="email"
              name="email"
              id="email"
              class="form-input"
              placeholder="tu@email.com"
              required
            />
          </div>
        </div>

        <!-- Mensaje -->
        <div class="space-y-1.5">
          <label for="message" class="block text-sm font-medium text-gray-700">
            Mensaje
          </label>
          <div class="relative group">
            <div class="absolute left-4 top-4 pointer-events-none">
              <svg
                class="h-5 w-5 text-gray-400 transition group-hover:text-blue-500"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z"
                  clip-rule="evenodd"></path>
              </svg>
            </div>
            <textarea
              id="message"
              name="message"
              rows="4"
              class="form-input !pt-11"
              placeholder="¿En qué puedo ayudarte?"
              required></textarea>
          </div>
        </div>

        <!-- Botón submit -->
        <button
          type="submit"
          onclick="window.dataLayer.push({
            'event': 'send_form_contact',
            'eventCategory': 'engagement',
            'eventAction': 'click',
            'eventLabel': 'free_call_30min'
          })"
          class="w-full bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-500/20 text-white px-6 py-4 rounded-xl font-medium text-sm md:text-base transition-all duration-200 flex items-center justify-center gap-2 shadow-lg shadow-blue-500/20"
        >
          <span>Enviar mensaje</span>
          <svg
            id="form-loading"
            class="hidden w-5 h-5 animate-spin"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path d="M12 3a9 9 0 1 0 9 9"></path>
          </svg>
        </button>
      </form>
    </div>
  </div>

  <!-- Mensajes de feedback -->
  <dialog id="form-good-feedback" class="feedback-dialog">
    <div
      class="flex items-center gap-4 p-4 bg-emerald-50 border-l-4 border-emerald-500"
    >
      <div
        class="flex-shrink-0 w-12 h-12 flex items-center justify-center rounded-full bg-emerald-100"
      >
        <svg
          class="w-6 h-6 text-emerald-600"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
            clip-rule="evenodd"></path>
        </svg>
      </div>
      <div>
        <p class="text-emerald-800 font-medium">¡Mensaje enviado!</p>
        <p class="text-emerald-700 text-sm">Te responderé lo antes posible.</p>
      </div>
    </div>
  </dialog>

  <dialog id="form-rate-limit-feedback" class="feedback-dialog">
    <div
      class="flex items-center gap-4 p-4 bg-amber-50 border-l-4 border-amber-500"
    >
      <div
        class="flex-shrink-0 w-12 h-12 flex items-center justify-center rounded-full bg-amber-100"
      >
        <svg
          class="w-6 h-6 text-amber-600"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
            clip-rule="evenodd"></path>
        </svg>
      </div>
      <div>
        <p class="text-amber-800 font-medium">¡Un momento!</p>
        <p class="text-amber-700 text-sm">
          Por favor, espera un minuto antes de enviar otro mensaje.
        </p>
      </div>
    </div>
  </dialog>

  <dialog id="form-bad-feedback" class="feedback-dialog">
    <div
      class="flex items-center gap-4 p-4 bg-red-50 border-l-4 border-red-500"
    >
      <div
        class="flex-shrink-0 w-12 h-12 flex items-center justify-center rounded-full bg-red-100"
      >
        <svg
          class="w-6 h-6 text-red-600"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
            clip-rule="evenodd"></path>
        </svg>
      </div>
      <div>
        <p class="text-red-800 font-medium">¡Ups!</p>
        <p class="text-red-700 text-sm">
          Algo salió mal. Por favor, inténtalo de nuevo.
        </p>
      </div>
    </div>
  </dialog>
</div>

<style>
  .form-input {
    width: 100%;
    padding: 0.875rem 1rem 0.875rem 3rem; /* reemplaza py-3.5 y los paddings */
    border-radius: 0.75rem; /* reemplaza rounded-xl */
    border: 1px solid rgb(229, 231, 235); /* reemplaza border border-gray-200 */
    color: rgb(31, 41, 55); /* reemplaza text-gray-800 */
    font-size: 0.875rem; /* reemplaza text-sm */
    background-color: rgba(255, 255, 255, 0.8); /* reemplaza bg-white/80 */
    backdrop-filter: blur(4px); /* reemplaza backdrop-blur-sm */
    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); /* reemplaza shadow-sm */
    transition: all 200ms; /* reemplaza transition duration-200 */
  }

  .form-input:hover {
    border-color: rgb(147, 197, 253); /* reemplaza hover:border-blue-300 */
  }

  .form-input:focus {
    border-color: rgb(59, 130, 246); /* reemplaza focus:border-blue-500 */
    outline: none; /* reemplaza focus:outline-none */
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1); /* reemplaza focus:ring-4 focus:ring-blue-500/10 */
  }

  @media (min-width: 768px) { /* reemplaza md:text-base */
    .form-input {
      font-size: 1rem;
    }
  }

  .feedback-dialog {
    position: fixed;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 50;
    border-radius: 0.75rem;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
    border: 1px solid rgba(243, 244, 246, 0.5);
    backdrop-filter: blur(4px);
    transition: all 300ms;
    padding: 0;
    margin: 0;
    max-width: 90vw;
  }

  @media (min-width: 768px) {
    .feedback-dialog {
      bottom: 2rem;
      max-width: 28rem;
    }
  }

  .feedback-dialog[open] {
    display: block;
  }

  .feedback-dialog::backdrop {
    background-color: rgba(17, 24, 39, 0.2);
    backdrop-filter: blur(4px);
  }
</style>

<script>
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const formLoadingIndicator = document.getElementById(
    "form-loading"
  ) as HTMLElement;
  const formGoodFeedback = document.getElementById(
    "form-good-feedback"
  ) as HTMLDialogElement;
  const formBadFeedback = document.getElementById(
    "form-bad-feedback"
  ) as HTMLDialogElement;
  const formRateLimitFeedback = document.getElementById(
    "form-rate-limit-feedback"
  ) as HTMLDialogElement;

  // Verificar que tenemos todos los elementos
  console.log("Elementos del DOM:", {
    form,
    formLoadingIndicator,
    formGoodFeedback,
    formBadFeedback,
    formRateLimitFeedback,
  });

  const handleSubmit = async (event: SubmitEvent) => {
    event.preventDefault();
    console.log("Formulario enviado");

    formLoadingIndicator?.classList.remove("hidden");

    try {
      const formData = new FormData(form);
      console.log("Datos del formulario:", Object.fromEntries(formData));

      const response = await fetch("https://usebasin.com/f/4b25a9769478", {
        method: "POST",
        body: formData,
      });

      console.log("Respuesta del servidor:", {
        status: response.status,
        headers: Object.fromEntries(response.headers),
      });

      if (response.ok) {
        console.log("Éxito - mostrando mensaje verde");
        form.reset();
        showFeedback(formGoodFeedback);
        return;
      }

      // No hay rate limit con Basin, así que solo mostraremos error general
      console.log("Error - mostrando mensaje rojo");
      showFeedback(formBadFeedback);
    } catch (error: unknown) {
      console.error("Error completo:", error);
      const errorDialog = formBadFeedback?.querySelector("p");
      if (errorDialog) {
        errorDialog.textContent =
          error instanceof Error
            ? error.message
            : "Error al enviar el mensaje. Por favor, inténtalo de nuevo.";
      }
      showFeedback(formBadFeedback);
    } finally {
      formLoadingIndicator?.classList.add("hidden");
    }
  };

  const showFeedback = (dialog: HTMLDialogElement | null) => {
    console.log("Mostrando feedback:", dialog?.id);
    if (!dialog) {
      console.log("No se encontró el diálogo");
      return;
    }

    // Ocultar todos los diálogos primero
    [formGoodFeedback, formBadFeedback, formRateLimitFeedback].forEach((d) => {
      d?.classList.add("invisible");
      d?.classList.remove("opacity-100");
    });

// Mostrar el diálogo específico
dialog.showModal(); // Añadimos esto
dialog.classList.remove("invisible");
setTimeout(() => dialog.classList.add("opacity-100"), 100);

// Ocultar después de 5 segundos
setTimeout(() => {
  dialog.classList.remove("opacity-100");
  setTimeout(() => {
    dialog.classList.add("invisible");
    dialog.close(); // Añadimos esto
  }, 300);
}, 2000);
};

form?.addEventListener("submit", handleSubmit);
</script>