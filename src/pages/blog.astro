---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import JsonLD from '../components/JsonLD.astro';
import { collections } from '../content/config';

interface BlogSchema {
  title: string;
  date: Date;
  description: string;
  image?: string;
  imageAlt?: string;
  tags?: string[];
  categoria?: string;
  lastModified?: Date;
  readingTime?: number;
  dificultad?: 'Básico' | 'Intermedio' | 'Avanzado';
  audiencia?: string[];
  metaTitle?: string;
  metaDescription?: string;
  ogImage?: string;
  isPublished: boolean;
  featured: boolean;
  author: string;
  articulosRelacionados?: string[];
  serie?: string;
  ordenEnSerie?: number;
  requisitoPrevio?: string[];
  tiempoImplementacion?: string;
}

type BlogPost = CollectionEntry<'blog'> & {
  data: BlogSchema;
};

// Obtener todos los posts publicados
const allPosts = (await getCollection('blog', ({ data }) => {
  return data.isPublished === true;
})) as BlogPost[];

// Ordenar por fecha
const sortedPosts = allPosts.sort((a, b) => 
  new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
);

const title = "Visita Nuestro Blog | Nexito Technology";
const description = "Explora nuestros artículos sobre automatización, IA y transformación digital. Mantente al día con las últimas tendencias tecnológicas.";

// Schema para el listado de blog
const blogListSchema = {
  "@type": "CollectionPage",
  "name": title,
  "description": description,
  "url": new URL("/blog", Astro.site).toString(),
  "isPartOf": {
    "@type": "Website",
    "name": "Nexito Technology"
  },
  "about": {
    "@type": "Organization",
    "name": "Nexito Technology"
  },
  "hasPart": sortedPosts.map(post => ({
    "@type": "BlogPosting",
    "headline": post.data.title,
    "description": post.data.description,
    "datePublished": post.data.date.toISOString(),
    "dateModified": post.data.lastModified?.toISOString() || post.data.date.toISOString(),
    "url": new URL(`/blog/${post.slug}`, Astro.site).toString(),
    "author": {
      "@type": "Organization",
      "name": post.data.author
    }
  }))
};
---

<Layout title={title} description={description}>
  <JsonLD type="WebPage" data={blogListSchema} />
  
  <main class="max-w-7xl mx-auto px-4 py-12">
    <header class="text-center mb-16">
      <h1 class="text-5xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
        Blog de Nexito Technology
      </h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Descubre las últimas tendencias en automatización, inteligencia artificial y transformación digital
      </p>
    </header>

    <div id="posts-grid" class="grid grid-cols-1 md:grid-cols-3 gap-8">
      {sortedPosts.map(post => (
        <article class="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300">
          <a href={`/blog/${post.slug}/`} class="block h-full">
            <div class="relative aspect-video overflow-hidden">
              {post.data.image ? (
                <img
                  src={post.data.image}
                  alt={post.data.imageAlt || post.data.title}
                  class="object-cover w-full h-full transform hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
              ) : (
                <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200" />
              )}
            </div>
            <div class="p-6">
              {post.data.tags && (
                <div class="flex flex-wrap gap-2 mb-3">
                  {post.data.tags.slice(0, 2).map(tag => (
                    <span class="text-xs px-2 py-1 bg-blue-50 text-blue-600 rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
              <h3 class="text-xl font-bold mb-3 line-clamp-2 hover:text-blue-600 transition-colors">
                {post.data.title}
              </h3>
              <p class="text-gray-600 mb-4 line-clamp-2">
                {post.data.description}
              </p>
              <div class="flex items-center justify-between text-sm text-gray-500">
                <time datetime={post.data.date.toISOString()}>
                  {new Date(post.data.date).toLocaleDateString('es-ES', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                {post.data.readingTime && (
                  <span>{post.data.readingTime} min de lectura</span>
                )}
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>

    <!-- Loading indicator -->
    <div id="loading-spinner" class="hidden py-12 text-center">
      <div class="inline-block w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full animate-spin"></div>
    </div>
  </main>
</Layout>

<script>
  function initializeBlogGrid() {
    const POSTS_PER_LOAD = 6;
    let visiblePosts = 0;
    const articles = document.querySelectorAll('#posts-grid article');
    
    // Reset: asegurarse de que todos los artículos empiezan sin la clase fade-in
    articles.forEach(article => {
      article.classList.remove('fade-in');
    });
    
    // Mostrar los primeros posts inmediatamente
    function showInitialPosts() {
      for(let i = 0; i < Math.min(POSTS_PER_LOAD, articles.length); i++) {
        articles[i].classList.add('fade-in');
        visiblePosts++;
      }
    }

    // Mostrar más posts al hacer scroll
    function showMorePosts() {
      const start = visiblePosts;
      const end = Math.min(start + POSTS_PER_LOAD, articles.length);
      
      for(let i = start; i < end; i++) {
        articles[i].classList.add('fade-in');
      }
      
      visiblePosts = end;
      
      if (visiblePosts >= articles.length) {
        const spinner = document.getElementById('loading-spinner');
        if (spinner) {
          spinner.style.display = 'none';
        }
        observer.disconnect();
      }
    }

    // Configurar el observer para la carga infinita
    const observer = new IntersectionObserver((entries) => {
      if (entries[0].isIntersecting) {
        setTimeout(showMorePosts, 300);
      }
    }, {
      rootMargin: '100px'
    });

    // Iniciar la carga
    showInitialPosts();

    // Configurar el spinner para la carga infinita
    const spinner = document.getElementById('loading-spinner');
    if (spinner) {
      spinner.classList.remove('hidden');
      observer.observe(spinner);
    }

    // Limpiar el observer cuando se desmonte la página
    return () => observer.disconnect();
  }

  // Inicializar en la carga inicial
  document.addEventListener('astro:page-load', initializeBlogGrid);
  
  // También inicializar si el documento ya está cargado (para navegación posterior)
  if (document.readyState === 'complete') {
    initializeBlogGrid();
  }
</script>

<style>
  article {
    transform: translateY(20px);
    transition: transform 0.5s ease-out;
  }

  article.fade-in {
    transform: translateY(0);
  }
</style>